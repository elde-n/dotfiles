#!/usr/bin/env luajit


local files = require "modules/files"
local notify = require "modules/notify"
local command = require "modules/command"

local DOWNLOADS = os.getenv("HOME") .. "/Downloads"
local VIDEOS = DOWNLOADS .. "/videos"
local AUDIOS = DOWNLOADS .. "/audios"
local IMAGES = DOWNLOADS .. "/images"

--@param file string
--@return string
local function get_file_type(file)
	local result, err = command.new("file")
		:arg("--mime-type -b")
		:arg(string.format("%q", file))
		:run()

	if err then return result.code end
	return (string.gsub(result.output, "(.*)(/.*)", "%1"))
end

--@param file string
--@return string
local function get_file_date(file)
	local result, err = command.new("stat")
		:arg("-c", "%y", '"' .. file .. '"')
		:run()

	if err then return result.code end
	return (string.gsub(result.output, "([%d%-]*)(.*)", "%1"))
end

--@param file string
--@return string
local function get_target_destination(file)
	local file_type = get_file_type(file)
	local suffix = '/' .. string.gsub(get_file_date(file), '-', '/')

	local prefix do
		if file_type == "video" then prefix = VIDEOS
		elseif file_type == "audio" then prefix = AUDIOS
		elseif file_type == "image" then prefix = IMAGES
		else prefix = DOWNLOADS
		end
	end

	return prefix .. suffix
end

for _, file in next, files.read_directory(DOWNLOADS) do
	if not files.is_directory(file) then
		local target = get_target_destination(file)
		if not files.is_directory(target) then
			files.write_directory(target)
		end

		if files.is_directory(target) then
			files.move(file, target)
		end
	end
end

notify.new({
	title = "Finished sorting downloads",
	category = "desktop-user"
}):send()
